var search_data = {"index":{"searchIndex":["exam","examen","interfaz","list","node","object","question","simpleselection","verdaderofalso","<=>()","<=>()","==()","answers_to_s()","compararrespuestas()","delete()","each()","insert()","insertelements()","insertquestion()","new()","new()","new()","new()","new()","new()","pullhead()","to_s()","to_s()","to_s()","to_s()"],"longSearchIndex":["exam","exam::examen","interfaz","list","node","object","question","simpleselection","verdaderofalso","node#<=>()","question#<=>()","question#==()","simpleselection#answers_to_s()","interfaz#compararrespuestas()","list#delete()","list#each()","list#insert()","list#insertelements()","exam::examen#insertquestion()","exam::examen::new()","interfaz::new()","list::new()","question::new()","simpleselection::new()","verdaderofalso::new()","list#pullhead()","exam::examen#to_s()","interfaz#to_s()","simpleselection#to_s()","verdaderofalso#to_s()"],"info":[["Exam","","Exam.html","","<p>Módulo que contiene la clase Examen.\n"],["Exam::Examen","","Exam/Examen.html","","<p>Esta clase permite crear un examen donde se almacenan preguntas.\n"],["Interfaz","","Interfaz.html","","<p>Clase que permite representar un examen con sus preguntas y comprobar la\npuntuación del mismo.\n"],["List","","List.html","","<p>Clase que permite crear un listado de nodos. Se ha incluido el Mixin\nEnumerable.\n"],["Node","","Node.html","","<p>Clase que permitirá crear una lista de objetos.\n"],["Object","","Object.html","",""],["Question","","Question.html","","<p>Clase que representa una pregunta y que contiene las posibles respuestas\nasí como la opción correcta. …\n"],["SimpleSelection","","SimpleSelection.html","","<p>Clase que hereda de Question y que permitirá crear preguntas con muchas\nopciones de respuesta.\n"],["VerdaderoFalso","","VerdaderoFalso.html","","<p>Clase que hereda de Question y que permite crear preguntas del tipo\nVerdadero o Falso.\n"],["<=>","Node","Node.html#method-i-3C-3D-3E","(other)","<p>Método que se ha de implementar al incluir el Mixin Comparable y con el que\nse hace la comparativa entre …\n"],["<=>","Question","Question.html#method-i-3C-3D-3E","(other)","<p>Método que hace la comparativa entre preguntas en función de su dificultad\ny sólo si la pasada por  parámetro …\n"],["==","Question","Question.html#method-i-3D-3D","(other)","<p>Método que invalida el == y lo ajusta en el caso de que se den dos\npreguntas con la misma dificultad …\n"],["answers_to_s","SimpleSelection","SimpleSelection.html#method-i-answers_to_s","()","<p>Método que devuelve una cadena con las opciones de respuesta de la\npregunta.\n"],["compararRespuestas","Interfaz","Interfaz.html#method-i-compararRespuestas","(respuestasUsuario)","<p>Método que en función de unas respuestas proporcionadas por el usuario\ncomprueba la nota obtenida en …\n"],["delete","List","List.html#method-i-delete","(nodo)","<p>Método que permite eliminar un nodo de lista independientemente de su\nposición en ella.\n"],["each","List","List.html#method-i-each","()","<p>Método implementado al incluir el Mixin Enumerable y con el cual devolvemos\nel valor de cada nodo de …\n"],["insert","List","List.html#method-i-insert","(node)","<p>Método que permite insertar un nodo en la lista\n"],["insertElements","List","List.html#method-i-insertElements","(arrayNodos)","<p>Método que recibe un conjunto de nodos y los inserta en la lista.\n"],["insertQuestion","Exam::Examen","Exam/Examen.html#method-i-insertQuestion","(question)","<p>Método que permite la inserción de una pregunta en el listado del examen\n"],["new","Exam::Examen","Exam/Examen.html#method-c-new","(listaPreguntas)","<p>Inicialización del conjunto de preguntas del examen.\n"],["new","Interfaz","Interfaz.html#method-c-new","(examen)","<p>Inicialización del atributo examen.\n"],["new","List","List.html#method-c-new","(nodoCabeza)","<p>Inicialización de variables cabeza y cola.\n"],["new","Question","Question.html#method-c-new","(ask,respuestaCorrecta,difficulty=0)","<p>Inicialización de la pregunta, recogiendo los atributos ask,\nrespuestaCorrecta y difficulty (por defecto …\n"],["new","SimpleSelection","SimpleSelection.html#method-c-new","(ask, answers,respuestaCorrecta,difficulty=0)","<p>Inicialización de las variables ask, answers, respuestaCorrecta y\ndifficulty. Ésta última con valor por …\n"],["new","VerdaderoFalso","VerdaderoFalso.html#method-c-new","(ask,respuestaCorrecta,difficulty=0)","<p>Inicialización de los atributos mediante una llamada al constructor de la\nclase madre.\n"],["pullHead","List","List.html#method-i-pullHead","()","<p>Método que permite extraer la cabeza de la lista\n"],["to_s","Exam::Examen","Exam/Examen.html#method-i-to_s","()","<p>Método que devuelve una cadena con las preguntas del examen\n"],["to_s","Interfaz","Interfaz.html#method-i-to_s","()","<p>Método que devuelve una cadena con las preguntas ordenadas de menor a\nmayor.\n"],["to_s","SimpleSelection","SimpleSelection.html#method-i-to_s","()","<p>Método que devuelve una cadena con el enunciado y las opciones de respuesta\nde la pregunta.\n"],["to_s","VerdaderoFalso","VerdaderoFalso.html#method-i-to_s","()","<p>Método que devuelve una cadena con el enunciado y las dos posibles opciones\nde respuesta para la pregunta. …\n"]]}}